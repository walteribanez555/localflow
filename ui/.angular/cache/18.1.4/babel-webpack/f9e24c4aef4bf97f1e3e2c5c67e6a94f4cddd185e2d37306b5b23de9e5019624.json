{"ast":null,"code":"import { signal } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Menu } from '../../../core/constants/menu';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let MenuService = /*#__PURE__*/(() => {\n  class MenuService {\n    constructor(router) {\n      this.router = router;\n      this._showSidebar = signal(true);\n      this._showMobileMenu = signal(false);\n      this._pagesMenu = signal([]);\n      this._subscription = new Subscription();\n      /** Set dynamic menu */\n      this._pagesMenu.set(Menu.pages);\n      let sub = this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          /** Expand menu base on active route */\n          this._pagesMenu().forEach(menu => {\n            let activeGroup = false;\n            menu.items.forEach(subMenu => {\n              const active = this.isActive(subMenu.route);\n              subMenu.expanded = active;\n              subMenu.active = active;\n              if (active) activeGroup = true;\n              if (subMenu.children) {\n                this.expand(subMenu.children);\n              }\n            });\n            menu.active = activeGroup;\n          });\n        }\n      });\n      this._subscription.add(sub);\n    }\n    get showSideBar() {\n      return this._showSidebar();\n    }\n    get showMobileMenu() {\n      return this._showMobileMenu();\n    }\n    get pagesMenu() {\n      return this._pagesMenu();\n    }\n    set showSideBar(value) {\n      this._showSidebar.set(value);\n    }\n    set showMobileMenu(value) {\n      this._showMobileMenu.set(value);\n    }\n    toggleSidebar() {\n      this._showSidebar.set(!this._showSidebar());\n    }\n    toggleMenu(menu) {\n      this.showSideBar = true;\n      menu.expanded = !menu.expanded;\n    }\n    toggleSubMenu(submenu) {\n      submenu.expanded = !submenu.expanded;\n    }\n    expand(items) {\n      items.forEach(item => {\n        item.expanded = this.isActive(item.route);\n        if (item.children) this.expand(item.children);\n      });\n    }\n    isActive(instruction) {\n      return this.router.isActive(this.router.createUrlTree([instruction]), {\n        paths: 'subset',\n        queryParams: 'subset',\n        fragment: 'ignored',\n        matrixParams: 'ignored'\n      });\n    }\n    ngOnDestroy() {\n      this._subscription.unsubscribe();\n    }\n    static #_ = this.ɵfac = function MenuService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MenuService)(i0.ɵɵinject(i1.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MenuService,\n      factory: MenuService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return MenuService;\n})();","map":{"version":3,"names":["signal","NavigationEnd","Subscription","Menu","MenuService","constructor","router","_showSidebar","_showMobileMenu","_pagesMenu","_subscription","set","pages","sub","events","subscribe","event","forEach","menu","activeGroup","items","subMenu","active","isActive","route","expanded","children","expand","add","showSideBar","showMobileMenu","pagesMenu","value","toggleSidebar","toggleMenu","toggleSubMenu","submenu","item","instruction","createUrlTree","paths","queryParams","fragment","matrixParams","ngOnDestroy","unsubscribe","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\walte\\Documents\\hackaton\\locallyflow\\ui\\src\\app\\modules\\layout\\services\\menu.service.ts"],"sourcesContent":["import { Injectable, OnDestroy, signal } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Menu } from '../../../core/constants/menu';\r\nimport { MenuItem, SubMenuItem } from '../../../core/models/menu.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MenuService implements OnDestroy {\r\n  private _showSidebar = signal(true);\r\n  private _showMobileMenu = signal(false);\r\n  private _pagesMenu = signal<MenuItem[]>([]);\r\n  private _subscription = new Subscription();\r\n\r\n  constructor(private router: Router) {\r\n    /** Set dynamic menu */\r\n    this._pagesMenu.set(Menu.pages);\r\n\r\n    let sub = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        /** Expand menu base on active route */\r\n        this._pagesMenu().forEach((menu) => {\r\n          let activeGroup = false;\r\n          menu.items.forEach((subMenu) => {\r\n            const active = this.isActive(subMenu.route);\r\n            subMenu.expanded = active;\r\n            subMenu.active = active;\r\n            if (active) activeGroup = true;\r\n            if (subMenu.children) {\r\n              this.expand(subMenu.children);\r\n            }\r\n          });\r\n          menu.active = activeGroup;\r\n        });\r\n      }\r\n    });\r\n    this._subscription.add(sub);\r\n  }\r\n\r\n  get showSideBar() {\r\n    return this._showSidebar();\r\n  }\r\n  get showMobileMenu() {\r\n    return this._showMobileMenu();\r\n  }\r\n  get pagesMenu() {\r\n    return this._pagesMenu();\r\n  }\r\n\r\n  set showSideBar(value: boolean) {\r\n    this._showSidebar.set(value);\r\n  }\r\n  set showMobileMenu(value: boolean) {\r\n    this._showMobileMenu.set(value);\r\n  }\r\n\r\n  public toggleSidebar() {\r\n    this._showSidebar.set(!this._showSidebar());\r\n  }\r\n\r\n  public toggleMenu(menu: any) {\r\n    this.showSideBar = true;\r\n    menu.expanded = !menu.expanded;\r\n  }\r\n\r\n  public toggleSubMenu(submenu: SubMenuItem) {\r\n    submenu.expanded = !submenu.expanded;\r\n  }\r\n\r\n  private expand(items: Array<any>) {\r\n    items.forEach((item) => {\r\n      item.expanded = this.isActive(item.route);\r\n      if (item.children) this.expand(item.children);\r\n    });\r\n  }\r\n\r\n  private isActive(instruction: any): boolean {\r\n    return this.router.isActive(this.router.createUrlTree([instruction]), {\r\n      paths: 'subset',\r\n      queryParams: 'subset',\r\n      fragment: 'ignored',\r\n      matrixParams: 'ignored',\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAgCA,MAAM,QAAQ,eAAe;AAC7D,SAASC,aAAa,QAAgB,iBAAiB;AACvD,SAASC,YAAY,QAAQ,MAAM;AACnC,SAASC,IAAI,QAAQ,8BAA8B;;;AAMnD,WAAaC,WAAW;EAAlB,MAAOA,WAAW;IAMtBC,YAAoBC,MAAc;MAAd,KAAAA,MAAM,GAANA,MAAM;MALlB,KAAAC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;MAC3B,KAAAQ,eAAe,GAAGR,MAAM,CAAC,KAAK,CAAC;MAC/B,KAAAS,UAAU,GAAGT,MAAM,CAAa,EAAE,CAAC;MACnC,KAAAU,aAAa,GAAG,IAAIR,YAAY,EAAE;MAGxC;MACA,IAAI,CAACO,UAAU,CAACE,GAAG,CAACR,IAAI,CAACS,KAAK,CAAC;MAE/B,IAAIC,GAAG,GAAG,IAAI,CAACP,MAAM,CAACQ,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;QAC/C,IAAIA,KAAK,YAAYf,aAAa,EAAE;UAClC;UACA,IAAI,CAACQ,UAAU,EAAE,CAACQ,OAAO,CAAEC,IAAI,IAAI;YACjC,IAAIC,WAAW,GAAG,KAAK;YACvBD,IAAI,CAACE,KAAK,CAACH,OAAO,CAAEI,OAAO,IAAI;cAC7B,MAAMC,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACF,OAAO,CAACG,KAAK,CAAC;cAC3CH,OAAO,CAACI,QAAQ,GAAGH,MAAM;cACzBD,OAAO,CAACC,MAAM,GAAGA,MAAM;cACvB,IAAIA,MAAM,EAAEH,WAAW,GAAG,IAAI;cAC9B,IAAIE,OAAO,CAACK,QAAQ,EAAE;gBACpB,IAAI,CAACC,MAAM,CAACN,OAAO,CAACK,QAAQ,CAAC;cAC/B;YACF,CAAC,CAAC;YACFR,IAAI,CAACI,MAAM,GAAGH,WAAW;UAC3B,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACF,IAAI,CAACT,aAAa,CAACkB,GAAG,CAACf,GAAG,CAAC;IAC7B;IAEA,IAAIgB,WAAWA,CAAA;MACb,OAAO,IAAI,CAACtB,YAAY,EAAE;IAC5B;IACA,IAAIuB,cAAcA,CAAA;MAChB,OAAO,IAAI,CAACtB,eAAe,EAAE;IAC/B;IACA,IAAIuB,SAASA,CAAA;MACX,OAAO,IAAI,CAACtB,UAAU,EAAE;IAC1B;IAEA,IAAIoB,WAAWA,CAACG,KAAc;MAC5B,IAAI,CAACzB,YAAY,CAACI,GAAG,CAACqB,KAAK,CAAC;IAC9B;IACA,IAAIF,cAAcA,CAACE,KAAc;MAC/B,IAAI,CAACxB,eAAe,CAACG,GAAG,CAACqB,KAAK,CAAC;IACjC;IAEOC,aAAaA,CAAA;MAClB,IAAI,CAAC1B,YAAY,CAACI,GAAG,CAAC,CAAC,IAAI,CAACJ,YAAY,EAAE,CAAC;IAC7C;IAEO2B,UAAUA,CAAChB,IAAS;MACzB,IAAI,CAACW,WAAW,GAAG,IAAI;MACvBX,IAAI,CAACO,QAAQ,GAAG,CAACP,IAAI,CAACO,QAAQ;IAChC;IAEOU,aAAaA,CAACC,OAAoB;MACvCA,OAAO,CAACX,QAAQ,GAAG,CAACW,OAAO,CAACX,QAAQ;IACtC;IAEQE,MAAMA,CAACP,KAAiB;MAC9BA,KAAK,CAACH,OAAO,CAAEoB,IAAI,IAAI;QACrBA,IAAI,CAACZ,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAACc,IAAI,CAACb,KAAK,CAAC;QACzC,IAAIa,IAAI,CAACX,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACU,IAAI,CAACX,QAAQ,CAAC;MAC/C,CAAC,CAAC;IACJ;IAEQH,QAAQA,CAACe,WAAgB;MAC/B,OAAO,IAAI,CAAChC,MAAM,CAACiB,QAAQ,CAAC,IAAI,CAACjB,MAAM,CAACiC,aAAa,CAAC,CAACD,WAAW,CAAC,CAAC,EAAE;QACpEE,KAAK,EAAE,QAAQ;QACfC,WAAW,EAAE,QAAQ;QACrBC,QAAQ,EAAE,SAAS;QACnBC,YAAY,EAAE;OACf,CAAC;IACJ;IAEAC,WAAWA,CAAA;MACT,IAAI,CAAClC,aAAa,CAACmC,WAAW,EAAE;IAClC;IAAC,QAAAC,CAAA,G;uCA/EU1C,WAAW,EAAA2C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;IAAA,QAAAC,EAAA,G;aAAX/C,WAAW;MAAAgD,OAAA,EAAXhD,WAAW,CAAAiD,IAAA;MAAAC,UAAA,EAFV;IAAM;;SAEPlD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}