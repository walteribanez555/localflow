{"ast":null,"code":"import { EventEmitter, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { cx } from '../../utils/ckassnames';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"*\"];\nexport let ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor() {\n      this.impact = input('none');\n      this.size = input('medium');\n      this.shape = input('rounded');\n      this.tone = input('primary');\n      this.shadow = input('none');\n      this.full = input(false, {\n        transform: value => typeof value === 'string' ? value === '' : value\n      });\n      this.buttonClick = new EventEmitter();\n      this.classes = '';\n      this.baseClasses = 'font-semibold focus-visible:outline-none flex items-center justify-center focus-visible:ring-2 focus-visible:ring-offset-2 active:translate-y-px disabled:pointer-events-none disabled:opacity-50';\n      this.impactClasses = {\n        primary: {\n          bold: 'bg-primary text-primary-foreground hover:bg-primary/90 focus-visible:ring-primary',\n          light: 'bg-primary/20 text-primary hover:bg-primary/30 focus-visible:ring-primary',\n          none: 'bg-transparent text-primary hover:bg-primary/10 focus-visible:ring-primary'\n        },\n        danger: {\n          bold: 'bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive',\n          light: 'bg-destructive/20 text-destructive hover:bg-destructive/30 focus-visible:ring-destructive',\n          none: 'bg-transparent text-destructive hover:bg-destructive/10 focus-visible:ring-destructive'\n        },\n        success: {\n          bold: 'bg-green-500 text-green-950 hover:bg-green-600 focus-visible:ring-green-500',\n          light: 'bg-green-500/20 text-green-600 hover:bg-green-500/30 focus-visible:ring-green-500',\n          none: 'bg-transparent text-green-600 hover:bg-green-500/10 focus-visible:ring-green-500'\n        },\n        warning: {\n          bold: 'bg-yellow-500 text-yellow-950 hover:bg-yellow-600 focus-visible:ring-yellow-500',\n          light: 'bg-yellow-500/20 text-yellow-600 hover:bg-yellow-500/30 focus-visible:ring-yellow-500',\n          none: 'bg-transparent text-yellow-600 hover:bg-yellow-500/10 focus-visible:ring-yellow-500'\n        },\n        info: {\n          bold: 'bg-violet-500 text-white hover:bg-violet-600 focus-visible:ring-violet-500',\n          light: 'bg-violet-500/20 text-violet-600 hover:bg-violet-500/30 focus-visible:ring-violet-500',\n          none: 'bg-transparent text-violet-600 hover:bg-violet-500/10 focus-visible:ring-violet-500'\n        },\n        light: {\n          bold: 'bg-muted text-muted-foreground hover:bg-muted/90 focus-visible:ring-muted',\n          light: 'bg-muted/20 text-muted-foreground hover:bg-muted focus-visible:ring-muted',\n          none: 'bg-transparent text-muted-foreground hover:bg-muted focus-visible:ring-muted'\n        }\n      };\n      this.sizeClasses = {\n        small: 'px-3 py-1 text-xs',\n        medium: 'px-5 py-2 text-sm',\n        large: 'px-7 py-2.5 text-lg'\n      };\n      this.shapeClasses = {\n        square: 'rounded-none',\n        rounded: 'rounded-lg',\n        pill: 'rounded-full'\n      };\n      this.shadowClasses = {\n        none: '',\n        small: 'shadow-sm',\n        medium: 'shadow-md',\n        large: 'shadow-lg'\n      };\n    }\n    ngOnInit() {\n      this.classes = cx(this.baseClasses, this.impactClasses[this.tone()][this.impact()], this.sizeClasses[this.size()], this.shapeClasses[this.shape()], this.shadowClasses[this.shadow()], this.full() ? 'w-full' : '');\n    }\n    onButtonClick() {\n      this.buttonClick.emit();\n    }\n    static #_ = this.ɵfac = function ButtonComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ButtonComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ButtonComponent,\n      selectors: [[\"app-button\"]],\n      inputs: {\n        impact: [1, \"impact\"],\n        size: [1, \"size\"],\n        shape: [1, \"shape\"],\n        tone: [1, \"tone\"],\n        shadow: [1, \"shadow\"],\n        full: [1, \"full\"]\n      },\n      outputs: {\n        buttonClick: \"buttonClick\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 2,\n      vars: 1,\n      consts: [[3, \"click\", \"ngClass\"]],\n      template: function ButtonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function ButtonComponent_Template_button_click_0_listener() {\n            return ctx.onButtonClick();\n          });\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.classes);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass]\n    });\n  }\n  return ButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}