{"ast":null,"code":"import { signal } from '@angular/core';\nimport { effect } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor() {\n      this.theme = signal({\n        mode: 'dark',\n        color: 'violet'\n      });\n      this.loadTheme();\n      effect(() => {\n        this.setTheme();\n      });\n    }\n    loadTheme() {\n      const theme = localStorage.getItem('theme');\n      if (theme) {\n        this.theme.set(JSON.parse(theme));\n      }\n    }\n    setTheme() {\n      localStorage.setItem('theme', JSON.stringify(this.theme()));\n      this.setThemeClass();\n    }\n    get isDark() {\n      return this.theme().mode == 'dark';\n    }\n    setThemeClass() {\n      document.querySelector('html').className = this.theme().mode;\n      document.querySelector('html').setAttribute('data-theme', this.theme().color);\n    }\n    static #_ = this.ɵfac = function ThemeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ThemeService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ThemeService;\n})();","map":{"version":3,"names":["signal","effect","ThemeService","constructor","theme","mode","color","loadTheme","setTheme","localStorage","getItem","set","JSON","parse","setItem","stringify","setThemeClass","isDark","document","querySelector","className","setAttribute","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\walte\\Documents\\hackaton\\locallyflow\\ui\\src\\app\\core\\services\\theme.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\r\nimport { Theme } from '../models/theme.model';\r\nimport { effect } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ThemeService {\r\n  public theme = signal<Theme>({ mode: 'dark', color: 'violet' });\r\n\r\n  constructor() {\r\n    this.loadTheme();\r\n    effect(() => {\r\n      this.setTheme();\r\n    });\r\n  }\r\n\r\n  private loadTheme() {\r\n    const theme = localStorage.getItem('theme');\r\n    if (theme) {\r\n      this.theme.set(JSON.parse(theme));\r\n    }\r\n  }\r\n\r\n  private setTheme() {\r\n    localStorage.setItem('theme', JSON.stringify(this.theme()));\r\n    this.setThemeClass();\r\n  }\r\n\r\n  public get isDark(): boolean {\r\n    return this.theme().mode == 'dark';\r\n  }\r\n\r\n  private setThemeClass() {\r\n    document.querySelector('html')!.className = this.theme().mode;\r\n    document.querySelector('html')!.setAttribute('data-theme', this.theme().color);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAElD,SAASC,MAAM,QAAQ,eAAe;;AAKtC,WAAaC,YAAY;EAAnB,MAAOA,YAAY;IAGvBC,YAAA;MAFO,KAAAC,KAAK,GAAGJ,MAAM,CAAQ;QAAEK,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAQ,CAAE,CAAC;MAG7D,IAAI,CAACC,SAAS,EAAE;MAChBN,MAAM,CAAC,MAAK;QACV,IAAI,CAACO,QAAQ,EAAE;MACjB,CAAC,CAAC;IACJ;IAEQD,SAASA,CAAA;MACf,MAAMH,KAAK,GAAGK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIN,KAAK,EAAE;QACT,IAAI,CAACA,KAAK,CAACO,GAAG,CAACC,IAAI,CAACC,KAAK,CAACT,KAAK,CAAC,CAAC;MACnC;IACF;IAEQI,QAAQA,CAAA;MACdC,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAAC,IAAI,CAACX,KAAK,EAAE,CAAC,CAAC;MAC3D,IAAI,CAACY,aAAa,EAAE;IACtB;IAEA,IAAWC,MAAMA,CAAA;MACf,OAAO,IAAI,CAACb,KAAK,EAAE,CAACC,IAAI,IAAI,MAAM;IACpC;IAEQW,aAAaA,CAAA;MACnBE,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAE,CAACC,SAAS,GAAG,IAAI,CAAChB,KAAK,EAAE,CAACC,IAAI;MAC7Da,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAE,CAACE,YAAY,CAAC,YAAY,EAAE,IAAI,CAACjB,KAAK,EAAE,CAACE,KAAK,CAAC;IAChF;IAAC,QAAAgB,CAAA,G;uCA7BUpB,YAAY;IAAA;IAAA,QAAAqB,EAAA,G;aAAZrB,YAAY;MAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;MAAAC,UAAA,EAFX;IAAM;;SAEPxB,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}