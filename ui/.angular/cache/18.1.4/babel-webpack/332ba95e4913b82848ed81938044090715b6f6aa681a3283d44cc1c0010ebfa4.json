{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { filter, fromEvent } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ClickOutsideDirective = /*#__PURE__*/(() => {\n  class ClickOutsideDirective {\n    constructor(element, document) {\n      this.element = element;\n      this.document = document;\n      this.clickOutside = new EventEmitter();\n    }\n    ngAfterViewInit() {\n      this.documentClickSubscription = fromEvent(this.document, 'click').pipe(filter(event => {\n        return !this.isInside(event.target);\n      })).subscribe(() => {\n        this.clickOutside.emit();\n      });\n    }\n    ngOnDestroy() {\n      this.documentClickSubscription?.unsubscribe();\n    }\n    isInside(elementToCheck) {\n      return elementToCheck === this.element.nativeElement || this.element.nativeElement.contains(elementToCheck);\n    }\n    static #_ = this.ɵfac = function ClickOutsideDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClickOutsideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: ClickOutsideDirective,\n      selectors: [[\"\", \"clickOutside\", \"\"]],\n      outputs: {\n        clickOutside: \"clickOutside\"\n      },\n      standalone: true\n    });\n  }\n  return ClickOutsideDirective;\n})();","map":{"version":3,"names":["DOCUMENT","EventEmitter","filter","fromEvent","ClickOutsideDirective","constructor","element","document","clickOutside","ngAfterViewInit","documentClickSubscription","pipe","event","isInside","target","subscribe","emit","ngOnDestroy","unsubscribe","elementToCheck","nativeElement","contains","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","outputs","standalone"],"sources":["C:\\Users\\walte\\Documents\\hackaton\\locallyflow\\ui\\src\\app\\shared\\directives\\click-outside.directive.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\r\nimport { AfterViewInit, Directive, ElementRef, EventEmitter, Inject, OnDestroy, Output } from '@angular/core';\r\nimport { filter, fromEvent, Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[clickOutside]',\r\n    standalone: true,\r\n})\r\nexport class ClickOutsideDirective implements AfterViewInit, OnDestroy {\r\n  @Output() clickOutside = new EventEmitter<void>();\r\n\r\n  documentClickSubscription: Subscription | undefined;\r\n\r\n  constructor(private element: ElementRef, @Inject(DOCUMENT) private document: Document) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.documentClickSubscription = fromEvent(this.document, 'click')\r\n      .pipe(\r\n        filter((event) => {\r\n          return !this.isInside(event.target as HTMLElement);\r\n        }),\r\n      )\r\n      .subscribe(() => {\r\n        this.clickOutside.emit();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.documentClickSubscription?.unsubscribe();\r\n  }\r\n\r\n  isInside(elementToCheck: HTMLElement): boolean {\r\n    return elementToCheck === this.element.nativeElement || this.element.nativeElement.contains(elementToCheck);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAA+CC,YAAY,QAAmC,eAAe;AAC7G,SAASC,MAAM,EAAEC,SAAS,QAAsB,MAAM;;AAMtD,WAAaC,qBAAqB;EAA5B,MAAOA,qBAAqB;IAKhCC,YAAoBC,OAAmB,EAA4BC,QAAkB;MAAjE,KAAAD,OAAO,GAAPA,OAAO;MAAwC,KAAAC,QAAQ,GAARA,QAAQ;MAJjE,KAAAC,YAAY,GAAG,IAAIP,YAAY,EAAQ;IAIuC;IAExFQ,eAAeA,CAAA;MACb,IAAI,CAACC,yBAAyB,GAAGP,SAAS,CAAC,IAAI,CAACI,QAAQ,EAAE,OAAO,CAAC,CAC/DI,IAAI,CACHT,MAAM,CAAEU,KAAK,IAAI;QACf,OAAO,CAAC,IAAI,CAACC,QAAQ,CAACD,KAAK,CAACE,MAAqB,CAAC;MACpD,CAAC,CAAC,CACH,CACAC,SAAS,CAAC,MAAK;QACd,IAAI,CAACP,YAAY,CAACQ,IAAI,EAAE;MAC1B,CAAC,CAAC;IACN;IAEAC,WAAWA,CAAA;MACT,IAAI,CAACP,yBAAyB,EAAEQ,WAAW,EAAE;IAC/C;IAEAL,QAAQA,CAACM,cAA2B;MAClC,OAAOA,cAAc,KAAK,IAAI,CAACb,OAAO,CAACc,aAAa,IAAI,IAAI,CAACd,OAAO,CAACc,aAAa,CAACC,QAAQ,CAACF,cAAc,CAAC;IAC7G;IAAC,QAAAG,CAAA,G;uCAzBUlB,qBAAqB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAKiBxB,QAAQ;IAAA;IAAA,QAAA0B,EAAA,G;YAL9CtB,qBAAqB;MAAAuB,SAAA;MAAAC,OAAA;QAAApB,YAAA;MAAA;MAAAqB,UAAA;IAAA;;SAArBzB,qBAAqB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}